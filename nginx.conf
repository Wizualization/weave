
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8008;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       8008;
        server_name  chloebatch.com;
        location / {
            proxy_pass http://127.0.0.1:3006;
        }
    }

    server {
        listen       8008;
        server_name  optomancy.com;
        return 301 https://optomancy.com$request_uri;
#        location / {
#            proxy_pass http://127.0.0.1:3333;
#        }
    }


    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream deepstream {
      server 127.0.0.1:4778;
    }

    server {
        listen       8008;
        server_name  vrxd.io;
        return 301 https://vrxd.io$request_uri;
        # Allow any for root dir
        #location / {
        #    proxy_pass http://deepstream;
        #    proxy_http_version 1.1;
        #    proxy_set_header Upgrade $http_upgrade;
        #    proxy_set_header Connection "upgrade";
        #    add_header 'Access-Control-Allow-Origin' *;
        #}
#
#
        ## Deepstream websocket redirect
        #location /deepstream {
        #    proxy_pass http://deepstream;
        #    proxy_http_version 1.1;
        #    proxy_set_header Upgrade $http_upgrade;
        #    proxy_set_header Connection "upgrade";
        #    add_header 'Access-Control-Allow-Origin' *;
        #}
#
        ## Deepstream http endpoint
        #location /api {
        #    proxy_pass http://deepstream;
        #    proxy_http_version 1.1;
        #    add_header 'Access-Control-Allow-Origin' *;
        #}


    }

    server {
        listen 4443 ssl;
        server_name vrxd.io;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_certificate      C:\Certbot\live\vrxd.io\fullchain.pem;
        ssl_certificate_key  C:\Certbot\live\vrxd.io\privkey.pem;
        # Allow any for root dir
        location / {
            proxy_pass http://deepstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header 'Access-Control-Allow-Origin' *;
        }
        # Deepstream websocket redirect
        location /deepstream {
            proxy_pass http://deepstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header 'Access-Control-Allow-Origin' *;
        }
        # Deepstream http endpoint
        location /api {
            proxy_pass http://deepstream;
            proxy_http_version 1.1;
            add_header 'Access-Control-Allow-Origin' *;
        }
    }

   # hide the old ones
#    server {
#        listen       8008;
#        server_name  vrxd.io;
##        return 301 https://vrxd.io$request_uri;
#        location / {
#            proxy_pass http://127.0.0.1:4778;
#        }
#    }
#
#    server {
#        listen       4443 ssl;
#        server_name  vrxd.io;
#        ssl_certificate      C:\Certbot\live\vrxd.io\fullchain.pem;
#        ssl_certificate_key  C:\Certbot\live\vrxd.io\privkey.pem;
#        ssl_session_cache    shared:SSL:50m;
#        ssl_session_timeout  5m;
#        ssl_ciphers  HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers  on;
#        location / {
#            proxy_pass http://127.0.0.1:4778;
#            proxy_http_version 1.1;
#            proxy_set_header Upgrade $http_upgrade;
#            proxy_set_header Connection "upgrade";
#                add_header 'Access-Control-Allow-Origin' *;
#        }
#    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # WS server
    upstream websocket1 {
        server 127.0.0.1:8440;
    }
    server {
        listen       8008;
        server_name  optomancy.io;
        return 301 https://optomancy.io$request_uri;
#        location / {
#            proxy_pass http://127.0.0.1:8440;
#            proxy_http_version 1.1;
#            proxy_set_header Upgrade $http_upgrade;
#            proxy_set_header Connection "upgrade";
#            if ($request_method = 'OPTIONS') {
#                add_header 'Access-Control-Allow-Origin: $http_origin');
#                add_header 'Access-Control-Allow-Origin: GET, POST, DELETE, PUT, PATCH, OPTIONS');
#                add_header 'Access-Control-Allow-Credentials: true');
#                add_header 'Vary: Origin');
#
#            }
#
#                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
#                add_header 'Access-Control-Allow-Credentials' 'true' always;
#                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
#                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
#        }
    }
    server {
        listen       4443 ssl;
        server_name  optomancy.io;
        ssl_certificate      C:\Certbot\live\optomancy.io\fullchain.pem;
        ssl_certificate_key  C:\Certbot\live\optomancy.io\privkey.pem;
        ssl_session_cache    shared:SSL:50m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        location / {
            #proxy_pass http://websocket1/socket.io/;
            proxy_pass http://127.0.0.1:8440;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
#            if ($request_method = 'OPTIONS') {
#                add_header 'Access-Control-Allow-Origin: *');
#                add_header 'Access-Control-Allow-Origin: $http_origin');
#                add_header 'Access-Control-Allow-Origin: GET, POST, DELETE, PUT, PATCH, OPTIONS');
#                add_header 'Access-Control-Allow-Credentials: true');
#                add_header 'Vary: Origin');
#            }
                add_header 'Access-Control-Allow-Origin' *;

#                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
#                add_header 'Access-Control-Allow-Credentials' 'true' always;
#                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
#                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        }
#        location / {
#            root   html;
#            index  index.html index.htm;
#        }
    }


   # HTTPS server
    server {
        listen       4443 ssl;
        server_name  optomancy.com;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        ssl_certificate      C:\Certbot\live\optomancy.com\fullchain.pem;
        ssl_certificate_key  C:\Certbot\live\optomancy.com\privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security max-age=15768000;

#        ssl_session_cache    shared:SSL:1m;
#        ssl_session_timeout  5m;
#        ssl_ciphers  HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers  on;
        location / {
            proxy_pass http://127.0.0.1:3333;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            if ($request_method = 'OPTIONS') {
#                add_header 'Access-Control-Allow-Origin: *');
#                add_header 'Access-Control-Allow-Origin: GET, POST, DELETE, PUT, PATCH, OPTIONS');
#                add_header 'Access-Control-Allow-Credentials: true');
#                add_header 'Vary: Origin');
            }

                add_header 'Access-Control-Allow-Origin' *;
#                add_header 'Access-Control-Allow-Credentials' 'true' always;
#                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
#                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        }

#        location / {
#            root   html;
#            index  index.html index.htm;
#        }
    }

}
